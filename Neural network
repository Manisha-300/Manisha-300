{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.11.11","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":5196,"sourceType":"datasetVersion","datasetId":3147}],"dockerImageVersionId":31040,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session\nfrom matplotlib import pyplot as plt \n","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-05-24T15:40:26.135485Z","iopub.execute_input":"2025-05-24T15:40:26.135788Z","iopub.status.idle":"2025-05-24T15:40:26.156246Z","shell.execute_reply.started":"2025-05-24T15:40:26.135761Z","shell.execute_reply":"2025-05-24T15:40:26.155294Z"}},"outputs":[{"name":"stdout","text":"/kaggle/input/mnist-digit-recognizer/train.csv\n","output_type":"stream"}],"execution_count":16},{"cell_type":"code","source":"data= pd.read_csv('/kaggle/input/mnist-digit-recognizer/train.csv')\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-24T15:40:26.157640Z","iopub.execute_input":"2025-05-24T15:40:26.158001Z","iopub.status.idle":"2025-05-24T15:40:28.506881Z","shell.execute_reply.started":"2025-05-24T15:40:26.157972Z","shell.execute_reply":"2025-05-24T15:40:28.506197Z"}},"outputs":[],"execution_count":17},{"cell_type":"code","source":"data.head()\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-24T15:40:28.508338Z","iopub.execute_input":"2025-05-24T15:40:28.508637Z","iopub.status.idle":"2025-05-24T15:40:28.521991Z","shell.execute_reply.started":"2025-05-24T15:40:28.508611Z","shell.execute_reply":"2025-05-24T15:40:28.521342Z"}},"outputs":[{"execution_count":18,"output_type":"execute_result","data":{"text/plain":"   label  pixel0  pixel1  pixel2  pixel3  pixel4  pixel5  pixel6  pixel7  \\\n0      1       0       0       0       0       0       0       0       0   \n1      0       0       0       0       0       0       0       0       0   \n2      1       0       0       0       0       0       0       0       0   \n3      4       0       0       0       0       0       0       0       0   \n4      0       0       0       0       0       0       0       0       0   \n\n   pixel8  ...  pixel774  pixel775  pixel776  pixel777  pixel778  pixel779  \\\n0       0  ...         0         0         0         0         0         0   \n1       0  ...         0         0         0         0         0         0   \n2       0  ...         0         0         0         0         0         0   \n3       0  ...         0         0         0         0         0         0   \n4       0  ...         0         0         0         0         0         0   \n\n   pixel780  pixel781  pixel782  pixel783  \n0         0         0         0         0  \n1         0         0         0         0  \n2         0         0         0         0  \n3         0         0         0         0  \n4         0         0         0         0  \n\n[5 rows x 785 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>label</th>\n      <th>pixel0</th>\n      <th>pixel1</th>\n      <th>pixel2</th>\n      <th>pixel3</th>\n      <th>pixel4</th>\n      <th>pixel5</th>\n      <th>pixel6</th>\n      <th>pixel7</th>\n      <th>pixel8</th>\n      <th>...</th>\n      <th>pixel774</th>\n      <th>pixel775</th>\n      <th>pixel776</th>\n      <th>pixel777</th>\n      <th>pixel778</th>\n      <th>pixel779</th>\n      <th>pixel780</th>\n      <th>pixel781</th>\n      <th>pixel782</th>\n      <th>pixel783</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 785 columns</p>\n</div>"},"metadata":{}}],"execution_count":18},{"cell_type":"code","source":"data = np.array(data)\nm, n = data.shape\nnp.random.shuffle(data) # shuffle before splitting into dev and training sets\n\ndata_dev = data[0:1000].T\nY_dev = data_dev[0]\nX_dev = data_dev[1:n]\nX_dev = X_dev / 255.\n\ndata_train = data[1000:m].T\nY_train = data_train[0]\nX_train = data_train[1:n]\nX_train = X_train / 255.\n_,m_train = X_train.shape","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-24T15:40:28.522808Z","iopub.execute_input":"2025-05-24T15:40:28.523048Z","iopub.status.idle":"2025-05-24T15:40:29.345961Z","shell.execute_reply.started":"2025-05-24T15:40:28.523029Z","shell.execute_reply":"2025-05-24T15:40:29.345198Z"}},"outputs":[],"execution_count":19},{"cell_type":"code","source":"Y_train","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-24T15:40:29.347700Z","iopub.execute_input":"2025-05-24T15:40:29.347957Z","iopub.status.idle":"2025-05-24T15:40:29.353955Z","shell.execute_reply.started":"2025-05-24T15:40:29.347936Z","shell.execute_reply":"2025-05-24T15:40:29.353155Z"}},"outputs":[{"execution_count":20,"output_type":"execute_result","data":{"text/plain":"array([3, 7, 4, ..., 8, 1, 4])"},"metadata":{}}],"execution_count":20},{"cell_type":"code","source":"def init_params():\n    W1 = np.random.rand(10, 784) - 0.5\n    b1 = np.random.rand(10, 1) - 0.5\n    W2 = np.random.rand(10, 10) - 0.5\n    b2 = np.random.rand(10, 1) - 0.5\n    return W1, b1, W2, b2\n\ndef ReLU(Z):\n    return np.maximum(Z, 0)\n\ndef softmax(Z):\n    A = np.exp(Z) / sum(np.exp(Z))\n    return A\n    \ndef forward_prop(W1, b1, W2, b2, X):\n    Z1 = W1.dot(X) + b1\n    A1 = ReLU(Z1)\n    Z2 = W2.dot(A1) + b2\n    A2 = softmax(Z2)\n    return Z1, A1, Z2, A2\n\ndef ReLU_deriv(Z):\n    return Z > 0\n\ndef one_hot(Y):\n    one_hot_Y = np.zeros((Y.size, Y.max() + 1))\n    one_hot_Y[np.arange(Y.size), Y] = 1\n    one_hot_Y = one_hot_Y.T\n    return one_hot_Y\n\ndef backward_prop(Z1, A1, Z2, A2, W1, W2, X, Y):\n    one_hot_Y = one_hot(Y)\n    dZ2 = A2 - one_hot_Y\n    dW2 = 1 / m * dZ2.dot(A1.T)\n    db2 = 1 / m * np.sum(dZ2)\n    dZ1 = W2.T.dot(dZ2) * ReLU_deriv(Z1)\n    dW1 = 1 / m * dZ1.dot(X.T)\n    db1 = 1 / m * np.sum(dZ1)\n    return dW1, db1, dW2, db2\n\ndef update_params(W1, b1, W2, b2, dW1, db1, dW2, db2, alpha):\n    W1 = W1 - alpha * dW1\n    b1 = b1 - alpha * db1    \n    W2 = W2 - alpha * dW2  \n    b2 = b2 - alpha * db2    \n    return W1, b1, W2, b2\n    \n                       ","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-24T15:40:29.354806Z","iopub.execute_input":"2025-05-24T15:40:29.355027Z","iopub.status.idle":"2025-05-24T15:40:29.381253Z","shell.execute_reply.started":"2025-05-24T15:40:29.355009Z","shell.execute_reply":"2025-05-24T15:40:29.380077Z"}},"outputs":[],"execution_count":21},{"cell_type":"code","source":"def get_predictions(A2):\n    return np.argmax(A2, 0)\n\ndef get_accuracy(predictions, Y):\n    print(predictions, Y)\n    return np.sum(predictions == Y) / Y.size\n\ndef gradient_descent(X, Y, alpha, iterations):\n    W1, b1, W2, b2 = init_params()\n    for i in range(iterations):\n        Z1, A1, Z2, A2 = forward_prop(W1, b1, W2, b2, X)\n        dW1, db1, dW2, db2 = backward_prop(Z1, A1, Z2, A2, W1, W2, X, Y)\n        W1, b1, W2, b2 = update_params(W1, b1, W2, b2, dW1, db1, dW2, db2, alpha)\n        if i % 10 == 0:\n            print(\"Iteration: \", i)\n            predictions = get_predictions(A2)\n            print(get_accuracy(predictions, Y))\n    return W1, b1, W2, b2\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-24T15:40:29.382534Z","iopub.execute_input":"2025-05-24T15:40:29.382992Z","iopub.status.idle":"2025-05-24T15:40:29.407742Z","shell.execute_reply.started":"2025-05-24T15:40:29.382963Z","shell.execute_reply":"2025-05-24T15:40:29.406829Z"}},"outputs":[],"execution_count":22},{"cell_type":"code","source":"W1, b1, W2, b2 = gradient_descent(X_train, Y_train, 0.10, 500)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-24T15:40:29.408665Z","iopub.execute_input":"2025-05-24T15:40:29.408961Z","iopub.status.idle":"2025-05-24T15:41:07.359577Z","shell.execute_reply.started":"2025-05-24T15:40:29.408934Z","shell.execute_reply":"2025-05-24T15:41:07.358596Z"}},"outputs":[{"name":"stdout","text":"Iteration:  0\n[8 2 1 ... 3 6 3] [3 7 4 ... 8 1 4]\n0.09241463414634146\nIteration:  10\n[8 2 1 ... 5 6 9] [3 7 4 ... 8 1 4]\n0.15973170731707317\nIteration:  20\n[8 2 2 ... 8 3 9] [3 7 4 ... 8 1 4]\n0.23470731707317072\nIteration:  30\n[8 7 2 ... 8 3 9] [3 7 4 ... 8 1 4]\n0.2964390243902439\nIteration:  40\n[8 7 2 ... 8 3 9] [3 7 4 ... 8 1 4]\n0.35934146341463413\nIteration:  50\n[8 7 2 ... 8 3 9] [3 7 4 ... 8 1 4]\n0.4195853658536585\nIteration:  60\n[8 7 7 ... 8 3 9] [3 7 4 ... 8 1 4]\n0.4805121951219512\nIteration:  70\n[8 7 7 ... 8 3 9] [3 7 4 ... 8 1 4]\n0.5347317073170732\nIteration:  80\n[8 7 7 ... 8 3 9] [3 7 4 ... 8 1 4]\n0.5785121951219512\nIteration:  90\n[8 7 7 ... 8 3 9] [3 7 4 ... 8 1 4]\n0.6147073170731707\nIteration:  100\n[8 7 7 ... 8 3 9] [3 7 4 ... 8 1 4]\n0.6427073170731707\nIteration:  110\n[8 7 7 ... 8 3 9] [3 7 4 ... 8 1 4]\n0.6664878048780488\nIteration:  120\n[8 7 7 ... 8 3 9] [3 7 4 ... 8 1 4]\n0.6873414634146342\nIteration:  130\n[8 7 9 ... 8 3 9] [3 7 4 ... 8 1 4]\n0.7035121951219512\nIteration:  140\n[8 7 9 ... 8 3 4] [3 7 4 ... 8 1 4]\n0.7178536585365853\nIteration:  150\n[8 7 9 ... 8 3 4] [3 7 4 ... 8 1 4]\n0.7301219512195122\nIteration:  160\n[8 7 4 ... 8 3 4] [3 7 4 ... 8 1 4]\n0.7411951219512195\nIteration:  170\n[3 7 4 ... 8 1 4] [3 7 4 ... 8 1 4]\n0.7503170731707317\nIteration:  180\n[3 7 4 ... 8 1 4] [3 7 4 ... 8 1 4]\n0.7587804878048781\nIteration:  190\n[3 7 4 ... 8 1 4] [3 7 4 ... 8 1 4]\n0.7661219512195122\nIteration:  200\n[3 7 4 ... 8 1 4] [3 7 4 ... 8 1 4]\n0.7736829268292683\nIteration:  210\n[3 7 4 ... 8 1 4] [3 7 4 ... 8 1 4]\n0.7808536585365854\nIteration:  220\n[3 7 4 ... 8 1 4] [3 7 4 ... 8 1 4]\n0.7864146341463415\nIteration:  230\n[3 7 4 ... 8 1 4] [3 7 4 ... 8 1 4]\n0.7910975609756098\nIteration:  240\n[3 7 4 ... 8 1 4] [3 7 4 ... 8 1 4]\n0.7961463414634147\nIteration:  250\n[3 7 4 ... 8 1 4] [3 7 4 ... 8 1 4]\n0.7999756097560976\nIteration:  260\n[3 7 4 ... 8 1 4] [3 7 4 ... 8 1 4]\n0.8038048780487805\nIteration:  270\n[3 7 4 ... 8 1 4] [3 7 4 ... 8 1 4]\n0.8074634146341464\nIteration:  280\n[3 7 4 ... 8 1 4] [3 7 4 ... 8 1 4]\n0.811\nIteration:  290\n[3 7 4 ... 8 1 4] [3 7 4 ... 8 1 4]\n0.814170731707317\nIteration:  300\n[3 7 4 ... 8 1 4] [3 7 4 ... 8 1 4]\n0.8169512195121951\nIteration:  310\n[3 7 4 ... 8 1 4] [3 7 4 ... 8 1 4]\n0.8201219512195121\nIteration:  320\n[3 7 4 ... 8 1 4] [3 7 4 ... 8 1 4]\n0.8222439024390243\nIteration:  330\n[3 7 4 ... 8 1 4] [3 7 4 ... 8 1 4]\n0.8241463414634146\nIteration:  340\n[3 7 4 ... 8 1 4] [3 7 4 ... 8 1 4]\n0.8264634146341463\nIteration:  350\n[3 7 4 ... 8 1 4] [3 7 4 ... 8 1 4]\n0.8279512195121951\nIteration:  360\n[3 7 4 ... 8 1 4] [3 7 4 ... 8 1 4]\n0.83\nIteration:  370\n[3 7 4 ... 8 1 4] [3 7 4 ... 8 1 4]\n0.8315609756097561\nIteration:  380\n[3 7 4 ... 8 1 4] [3 7 4 ... 8 1 4]\n0.8334634146341463\nIteration:  390\n[3 7 4 ... 8 1 4] [3 7 4 ... 8 1 4]\n0.8352439024390244\nIteration:  400\n[3 7 4 ... 8 1 4] [3 7 4 ... 8 1 4]\n0.8372439024390244\nIteration:  410\n[3 7 4 ... 8 1 4] [3 7 4 ... 8 1 4]\n0.8386341463414634\nIteration:  420\n[3 7 4 ... 8 1 4] [3 7 4 ... 8 1 4]\n0.8403414634146341\nIteration:  430\n[3 7 4 ... 8 1 4] [3 7 4 ... 8 1 4]\n0.8422195121951219\nIteration:  440\n[3 7 4 ... 8 1 4] [3 7 4 ... 8 1 4]\n0.8432682926829268\nIteration:  450\n[3 7 4 ... 8 1 4] [3 7 4 ... 8 1 4]\n0.8447073170731707\nIteration:  460\n[3 7 4 ... 8 1 4] [3 7 4 ... 8 1 4]\n0.8464146341463414\nIteration:  470\n[3 7 4 ... 8 1 4] [3 7 4 ... 8 1 4]\n0.8475121951219512\nIteration:  480\n[3 7 4 ... 8 1 4] [3 7 4 ... 8 1 4]\n0.848390243902439\nIteration:  490\n[3 7 4 ... 8 1 4] [3 7 4 ... 8 1 4]\n0.8492682926829268\n","output_type":"stream"}],"execution_count":23},{"cell_type":"code","source":"def make_predictions(X, W1, b1, W2, b2):\n    _, _, _, A2 = forward_prop(W1, b1, W2, b2, X)\n    predictions = get_predictions(A2)\n    return predictions\n\ndef test_prediction(index, W1, b1, W2, b2):\n    current_image = X_train[:, index, None]\n    prediction = make_predictions(X_train[:, index, None], W1, b1, W2, b2)\n    label = Y_train[index]\n    print(\"Prediction: \", prediction)\n    print(\"Label: \", label)\n    \n    current_image = current_image.reshape((28, 28)) * 255\n    plt.gray()\n    plt.imshow(current_image, interpolation='nearest')\n    plt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-24T15:42:50.860818Z","iopub.execute_input":"2025-05-24T15:42:50.861113Z","iopub.status.idle":"2025-05-24T15:42:50.867769Z","shell.execute_reply.started":"2025-05-24T15:42:50.861092Z","shell.execute_reply":"2025-05-24T15:42:50.866583Z"}},"outputs":[],"execution_count":27},{"cell_type":"code","source":"test_prediction(0, W1, b1, W2, b2)\ntest_prediction(1, W1, b1, W2, b2)\ntest_prediction(2, W1, b1, W2, b2)\ntest_prediction(3, W1, b1, W2, b2)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-24T15:43:36.789753Z","iopub.execute_input":"2025-05-24T15:43:36.790066Z","iopub.status.idle":"2025-05-24T15:43:37.522778Z","shell.execute_reply.started":"2025-05-24T15:43:36.790036Z","shell.execute_reply":"2025-05-24T15:43:37.522045Z"}},"outputs":[{"name":"stdout","text":"Prediction:  [3]\nLabel:  3\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":"\n"},"metadata":{}},{"name":"stdout","text":"Prediction:  [7]\nLabel:  7\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":"\n"},"metadata":{}},{"name":"stdout","text":"Prediction:  [4]\nLabel:  4\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":"\n"},"metadata":{}},{"name":"stdout","text":"Prediction:  [8]\nLabel:  8\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":"\n"},"metadata":{}}],"execution_count":29},{"cell_type":"code","source":"dev_predictions= make_predictions(X_dev, W1, b1, W2, b2)\nget_accuracy(dev_predictions,Y_dev)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-24T15:45:15.313652Z","iopub.execute_input":"2025-05-24T15:45:15.313948Z","iopub.status.idle":"2025-05-24T15:45:15.326091Z","shell.execute_reply.started":"2025-05-24T15:45:15.313925Z","shell.execute_reply":"2025-05-24T15:45:15.325341Z"}},"outputs":[{"name":"stdout","text":"[3 3 1 9 8 0 6 5 2 9 2 3 0 0 0 0 9 8 3 3 6 7 4 4 0 4 6 9 5 6 1 4 8 5 1 1 8\n 4 5 1 2 0 7 3 4 1 1 7 2 0 8 8 0 8 1 5 8 4 7 0 3 8 8 2 1 0 6 0 1 0 2 8 2 2\n 2 0 4 3 0 2 8 1 3 7 7 5 3 8 6 4 6 3 5 2 3 7 2 1 7 3 4 2 4 8 9 7 0 7 5 0 5\n 5 1 9 5 5 0 4 3 0 3 2 2 3 1 6 1 7 0 9 4 3 7 2 8 1 0 4 9 2 3 8 0 3 7 9 5 8\n 6 3 0 7 9 1 1 0 2 1 7 0 9 7 6 1 3 9 3 0 9 1 7 0 3 5 6 5 2 1 7 4 2 6 2 6 1\n 9 4 2 9 9 7 4 6 2 2 1 4 1 8 9 2 9 2 8 2 8 1 0 4 8 8 1 3 9 1 1 2 2 0 6 3 0\n 3 7 1 2 1 5 7 7 7 1 5 6 8 9 2 6 5 6 7 0 1 3 0 8 8 8 0 4 1 9 7 6 9 6 3 6 7\n 7 0 4 1 1 5 2 8 6 8 9 4 7 1 1 1 9 6 4 7 2 3 8 1 5 1 6 1 6 5 6 8 8 7 2 7 3\n 4 9 8 5 3 1 0 5 2 8 8 0 4 7 3 3 2 1 1 9 7 7 1 9 3 9 6 7 5 5 1 1 0 4 6 4 9\n 0 6 8 9 3 3 5 6 3 8 1 3 9 6 5 1 4 7 4 9 9 7 4 0 8 6 5 2 4 9 7 9 5 6 3 6 6\n 1 4 0 0 3 1 1 2 6 8 1 2 4 2 5 1 6 7 9 6 3 4 9 5 2 6 4 4 2 9 0 7 4 9 8 9 1\n 3 7 0 0 7 2 4 0 1 1 6 8 4 7 0 8 2 1 6 1 5 7 9 9 2 9 3 0 0 5 6 6 3 1 6 5 8\n 8 1 1 8 4 3 7 4 0 9 3 3 1 8 9 9 2 3 9 1 0 5 2 2 2 1 6 0 6 4 9 3 9 6 2 6 7\n 7 6 8 9 6 3 7 7 2 0 3 2 2 6 2 8 7 1 5 5 7 4 6 8 6 1 3 8 6 5 0 2 1 3 9 8 3\n 3 9 8 5 0 4 8 0 3 6 0 4 5 0 2 5 6 0 9 7 2 4 7 5 4 3 3 1 9 4 5 3 7 9 0 4 7\n 0 0 2 6 1 4 2 4 3 4 9 3 6 5 5 2 9 1 5 6 2 1 4 4 7 1 7 9 5 9 9 8 7 7 6 4 7\n 3 6 3 1 9 6 0 1 9 4 7 7 8 5 7 5 1 3 6 1 1 8 7 8 3 7 5 8 2 1 9 0 2 3 5 7 0\n 4 3 7 3 3 2 8 6 0 9 8 7 5 6 6 6 5 6 4 5 7 9 8 5 6 9 7 9 1 8 3 7 9 7 8 1 6\n 0 4 9 0 5 6 2 3 6 1 9 0 2 5 1 7 1 9 9 9 6 8 7 5 9 2 9 6 0 8 9 7 3 6 1 0 1\n 1 8 0 1 5 2 7 1 2 5 4 6 1 6 3 3 3 7 8 0 0 7 5 9 1 7 2 7 5 7 9 2 1 9 1 2 0\n 4 2 9 5 3 3 8 5 4 1 2 4 8 3 4 3 6 5 2 9 7 2 1 8 8 1 3 6 3 3 2 4 2 2 7 4 3\n 1 4 1 4 4 1 5 2 8 0 0 1 1 2 5 7 4 6 9 1 3 9 2 3 2 1 1 3 1 9 3 7 3 7 3 2 6\n 7 1 9 1 4 0 2 0 1 9 4 8 8 3 9 2 6 8 0 7 8 8 7 2 4 0 7 2 0 9 0 5 2 9 6 5 5\n 9 7 3 4 3 2 1 7 8 9 1 7 0 6 1 1 6 1 0 8 8 8 4 4 9 3 2 3 8 7 0 9 7 6 1 1 4\n 4 8 8 4 7 9 4 3 1 9 0 8 9 6 8 2 4 2 0 9 3 4 8 0 8 6 7 1 8 7 3 2 2 4 4 9 0\n 4 9 6 5 7 1 1 7 6 9 3 4 2 6 2 0 7 1 9 3 4 0 0 0 6 7 8 8 1 3 5 9 6 1 7 3 4\n 3 9 5 3 3 3 8 0 6 9 5 1 3 3 0 1 8 0 6 0 3 5 6 9 9 7 0 3 7 5 3 8 4 1 5 8 5\n 1] [3 3 1 7 8 0 6 5 2 9 2 2 0 0 0 0 4 8 3 3 6 7 4 4 0 9 6 9 5 6 1 4 8 5 1 1 8\n 4 5 1 2 0 7 3 4 1 1 7 2 0 2 8 0 8 1 5 5 4 7 0 3 8 8 2 1 0 6 2 1 0 2 5 2 6\n 2 0 7 3 9 2 8 1 3 7 7 5 3 8 6 4 6 3 5 2 3 7 2 1 7 3 4 2 4 8 9 7 0 7 8 0 5\n 3 1 4 5 5 0 4 3 0 3 2 2 3 1 6 1 7 0 7 4 3 7 2 8 1 0 4 9 2 3 8 0 3 7 9 5 5\n 6 3 2 7 9 1 1 0 2 1 7 0 9 7 6 1 3 9 3 0 9 1 7 0 3 5 2 5 6 1 7 4 2 6 2 6 3\n 9 4 2 9 9 7 4 6 2 2 1 4 1 8 8 2 9 4 8 2 8 1 0 4 8 5 1 7 9 1 1 2 2 0 6 3 0\n 3 7 1 2 1 5 7 7 3 1 8 6 8 9 2 6 5 6 7 0 1 3 0 8 0 8 0 4 1 9 7 6 9 6 8 6 7\n 2 0 4 1 1 5 2 8 6 8 2 4 7 1 1 1 9 6 4 2 2 3 8 1 5 1 0 1 6 5 6 8 8 7 2 7 8\n 4 9 8 5 3 1 0 5 2 8 8 0 4 0 3 3 2 1 1 9 7 7 2 9 3 9 6 3 5 6 1 1 0 4 3 4 9\n 0 6 8 9 3 3 5 6 3 8 1 3 4 6 3 9 4 7 4 9 9 7 4 0 8 6 5 2 9 9 7 9 4 6 3 9 6\n 8 4 0 0 3 1 1 2 6 8 1 2 4 2 5 1 6 7 9 6 3 4 5 5 2 6 4 4 2 4 0 7 9 4 8 9 1\n 3 7 0 0 7 2 4 0 1 1 6 8 4 7 0 8 1 1 2 1 5 7 9 9 2 9 3 0 0 5 6 6 8 1 6 5 8\n 5 1 1 8 4 3 7 9 0 9 5 3 1 8 9 9 2 3 3 1 0 8 2 2 2 1 6 0 6 4 9 3 9 6 2 6 7\n 7 6 0 7 6 8 7 7 3 0 8 0 2 8 2 8 9 1 5 3 7 6 6 8 6 1 3 8 6 5 0 2 1 3 9 8 3\n 3 9 8 6 0 4 8 0 3 6 0 4 5 0 2 3 6 3 9 2 2 4 7 5 4 3 3 1 9 4 5 3 3 4 0 4 7\n 0 0 2 6 8 4 2 4 3 4 3 3 2 5 5 2 4 1 5 6 2 1 4 4 7 1 7 9 5 8 9 8 7 7 6 4 7\n 3 6 3 1 9 6 0 1 9 4 7 7 8 5 7 5 1 3 6 1 1 9 7 2 0 7 5 8 2 1 9 0 2 3 5 7 0\n 4 3 7 3 3 2 8 6 0 9 6 7 5 6 6 5 5 6 4 5 7 9 8 5 6 9 7 9 1 8 3 7 9 7 8 1 6\n 0 4 9 0 1 6 2 3 6 1 9 0 2 5 1 7 1 5 9 9 6 8 7 5 4 2 9 6 0 8 9 7 3 2 1 5 1\n 8 8 0 1 6 2 7 1 8 5 4 6 7 6 3 3 2 7 3 0 0 7 5 9 1 7 0 7 5 3 9 1 1 9 1 2 0\n 4 2 9 5 3 3 8 5 4 1 2 9 8 3 4 3 6 5 4 9 7 7 1 5 8 1 3 6 3 3 2 4 2 2 7 4 3\n 1 4 1 4 4 1 5 2 3 5 0 2 1 2 5 7 4 6 9 1 3 9 2 3 2 1 1 3 1 9 3 7 3 7 3 2 6\n 7 1 9 1 4 0 2 0 1 9 9 8 8 7 9 2 6 8 0 7 8 8 7 2 9 0 7 2 0 9 2 3 2 2 6 5 5\n 7 7 3 4 3 7 1 3 8 9 1 7 0 6 1 7 6 1 0 8 8 8 4 4 9 3 2 3 8 7 0 9 7 6 1 1 9\n 4 8 8 4 7 9 9 3 1 9 0 8 9 6 8 2 4 2 0 9 3 9 8 0 8 4 7 1 8 9 3 2 2 4 4 9 0\n 4 9 6 6 7 1 1 7 0 7 3 4 2 0 2 0 7 1 2 3 4 0 0 0 6 7 8 8 1 3 6 9 6 1 9 3 4\n 3 9 5 3 8 8 8 0 6 7 5 1 3 3 5 1 8 0 6 0 3 5 6 9 9 7 0 3 7 5 3 8 4 1 5 8 6\n 1]\n","output_type":"stream"},{"execution_count":30,"output_type":"execute_result","data":{"text/plain":"0.869"},"metadata":{}}],"execution_count":30}]}